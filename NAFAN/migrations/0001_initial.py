# Generated by Django 4.0.6 on 2023-03-29 15:58

import NAFAN.models.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AidProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_id', models.IntegerField(blank=True, default=1, null=True)),
                ('governing_access', models.TextField(blank=True)),
                ('rights', models.TextField(blank=True)),
                ('creative_commons', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Chronology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finding_aid_id', models.CharField(blank=True, max_length=32)),
                ('date', models.CharField(blank=True, max_length=255)),
                ('event', models.CharField(blank=True, max_length=1255)),
                ('sort_order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ControlAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finding_aid_id', models.CharField(blank=True, max_length=32)),
                ('term', models.CharField(blank=True, max_length=255)),
                ('link', models.CharField(blank=True, max_length=1255)),
                ('control_type', models.CharField(blank=True, max_length=1255)),
            ],
        ),
        migrations.CreateModel(
            name='FindingAid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid_type', models.CharField(blank=True, max_length=10)),
                ('elasticsearch_id', models.CharField(blank=True, max_length=32)),
                ('last_update', models.CharField(blank=True, max_length=32)),
                ('updated_by', models.CharField(blank=True, max_length=32)),
                ('revision_notes', models.CharField(blank=True, max_length=1023)),
                ('repository', models.CharField(blank=True, max_length=255)),
                ('reference_code', models.CharField(blank=True, max_length=1255)),
                ('title', models.CharField(max_length=1255)),
                ('date', models.CharField(blank=True, max_length=1255)),
                ('extent', models.CharField(blank=True, max_length=1255)),
                ('creator', models.CharField(blank=True, max_length=1255)),
                ('scope_and_content', models.TextField(blank=True)),
                ('governing_access', models.TextField(blank=True)),
                ('languages', models.CharField(blank=True, max_length=1255)),
                ('rights', models.CharField(blank=True, max_length=1255)),
                ('indent', models.CharField(blank=True, max_length=255)),
                ('intra_repository', models.CharField(blank=True, max_length=1255)),
                ('level', models.CharField(blank=True, max_length=32)),
                ('creative_commons', models.CharField(blank=True, max_length=32)),
                ('custodhist', models.CharField(blank=True, max_length=1255)),
                ('acqinfo', models.CharField(blank=True, max_length=5255)),
                ('processinfo', models.CharField(blank=True, max_length=1255)),
                ('container', models.CharField(blank=True, max_length=1255)),
                ('repository_link', models.CharField(blank=True, max_length=1255)),
                ('digital_link', models.CharField(blank=True, max_length=1255)),
                ('scope_and_content_raw', models.CharField(blank=True, max_length=5255)),
                ('note', models.CharField(blank=True, max_length=555)),
                ('abstract', models.TextField(blank=True)),
                ('citation', models.CharField(blank=True, max_length=1255)),
                ('bioghist', models.TextField(blank=True)),
                ('originals_location', models.TextField(blank=True)),
                ('ark', models.CharField(blank=True, max_length=1255)),
                ('snac', models.CharField(blank=True, max_length=1255)),
                ('wiki', models.CharField(blank=True, max_length=1255)),
                ('associated_file', models.CharField(blank=True, max_length=1255)),
                ('progenitorID', models.IntegerField(blank=True, default=0)),
                ('parentID', models.IntegerField(blank=True, default=0)),
                ('component', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='FindingAidAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finding_aid_id', models.CharField(blank=True, max_length=32)),
                ('revision_notes', models.CharField(blank=True, max_length=255)),
                ('update_date', models.DateField(null=True)),
                ('updated_by', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='FindingAidSubjectHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finding_aid_id', models.CharField(blank=True, max_length=32)),
                ('subject_header', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='HarvestProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_id', models.IntegerField(blank=True, default=1, null=True)),
                ('harvest_name', models.CharField(blank=True, max_length=255)),
                ('harvest_location', models.CharField(blank=True, max_length=255)),
                ('harvest_type', models.CharField(blank=True, max_length=255)),
                ('default_format', models.CharField(blank=True, max_length=255)),
                ('harvest_day', models.CharField(blank=True, max_length=10)),
                ('harvest_time', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='NAFANAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor_email', models.EmailField(max_length=254)),
                ('targetID', models.IntegerField()),
                ('target_type', models.CharField(max_length=10)),
                ('audit_action', models.CharField(max_length=10)),
                ('audit_time', models.DateTimeField()),
                ('notes', models.CharField(max_length=2048)),
            ],
        ),
        migrations.CreateModel(
            name='NAFANContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='NAFANJoinUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=25)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('collection_guides', models.TextField()),
                ('message', models.CharField(blank=True, max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='NAFANLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_time', models.DateTimeField()),
                ('log_type', models.CharField(choices=[('E', 'Exception'), ('I', 'Info'), ('L', 'Login')], max_length=1)),
                ('log_message', models.CharField(max_length=2048)),
            ],
        ),
        migrations.CreateModel(
            name='NAFANLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(blank=True, max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository_name', models.CharField(max_length=255, verbose_name='Repository')),
                ('parent_organization', models.CharField(blank=True, max_length=255)),
                ('repository_type', models.CharField(blank=True, max_length=255)),
                ('street_address_1', models.CharField(blank=True, max_length=255)),
                ('st_city', models.CharField(blank=True, max_length=255, verbose_name='City')),
                ('st_zip_code_5_numbers', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('latitude', models.CharField(blank=True, max_length=255)),
                ('longitude', models.CharField(blank=True, max_length=255)),
                ('notes', models.CharField(blank=True, max_length=5096)),
                ('email', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=32)),
                ('status', models.CharField(blank=True, max_length=32)),
                ('description', models.CharField(blank=True, max_length=5096)),
                ('governing_access', models.CharField(blank=True, max_length=5096)),
                ('elasticsearch_id', models.CharField(blank=True, max_length=32)),
                ('snac_permalink', models.CharField(blank=True, max_length=255)),
                ('harvest_location', models.CharField(blank=True, max_length=255)),
                ('DPLA', models.CharField(blank=True, max_length=255)),
                ('repo_id', models.CharField(blank=True, max_length=255)),
                ('name_notes', models.CharField(blank=True, max_length=255)),
                ('repository_name_authorized', models.CharField(blank=True, max_length=255)),
                ('repository_identifier_authorized', models.CharField(blank=True, max_length=255)),
                ('location_type', models.CharField(blank=True, max_length=255)),
                ('street_address_2', models.CharField(blank=True, max_length=255)),
                ('po_box', models.CharField(blank=True, max_length=255)),
                ('st_zip_code_4_following_numbers', models.CharField(blank=True, max_length=255)),
                ('street_address_county', models.CharField(blank=True, max_length=255)),
                ('language_of_entry', models.CharField(blank=True, max_length=255)),
                ('date_entry_recorded', models.CharField(blank=True, max_length=255)),
                ('entry_recorded_by', models.CharField(blank=True, max_length=255)),
                ('source_of_repository_data', models.CharField(blank=True, max_length=255)),
                ('url_of_source_of_repository_data', models.CharField(blank=True, max_length=255)),
                ('geocode_confidence', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='User_Repositories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=255)),
                ('repository_id', models.IntegerField()),
                ('repository_name', models.CharField(max_length=255)),
                ('st_city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_site_admin', models.BooleanField(default=False, verbose_name='site admin')),
                ('user_type', models.CharField(blank=True, max_length=32)),
                ('status', models.CharField(default='Inactive', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', NAFAN.models.managers.UserManager()),
            ],
        ),
    ]
